#!/usr/bin/python
# -*- coding:utf-8 -*-

# Author: Pablo Saavedra Rodinho
# Contact: pablo.saavedra@interoud.com

"""
Import credentials from a CSV formatted file
"""
import os
import sys
from optparse import OptionParser
import ConfigParser

reload(sys)
sys.setdefaultencoding('utf-8')

from django.core.management import setup_environ
import imp

try:
    imp.find_module('settings') # Assumed to be in the same directory.
except ImportError:
    import sys
    sys.stderr.write('''Error: Can't find the file 'settings.py' in the
    directory containing %r. It appears you've customized things.\n
    You'll have to run django-admin.py, passing it your settings
    module.\n''' % __file__)
    sys.exit(1)

import settings

# execute_manager(settings)
setup_environ(settings)

from passManager.utils.helpers import *
from passManager.models import passDb, passEncr, PasswordType
from passManager.models import ITConfigurationItem, ITService
from django.contrib.auth.models import User

def extra_passDb(model,modelobj,row,headers):
    if not modelobj:
        try:
            index_name = headers.index("name")
            found_objects = model.objects.filter(name=row[index_name])
            if len(found_objects) == 1:
                modelobj = found_objects[0]
            else:
                modelobj = model()
        except Exception, e:
            modelobj = model()

    try:
        index_password_type \
            = headers.index("password_type")
        try:
            type_ = PasswordType.objects.filter(name=row[index_password_type])[0]
        except Exception, e:
            type_ = PasswordType(name=row[index_password_type])
            type_.save()
        modelobj.password_type = type_
    except Exception, e:
        pass

    try:
        index_ci \
            = headers.index("ci")
        new_value = row[index_ci]
        service_name,ci_name = new_value.split("::")
        try:
            service_ = ITService.objects.filter(name=service_name)[0]
        except Exception, e:
            service_ = ITService(name=service_name)
            service_.save()
        try:
            ci_ = ITConfigurationItem.objects.filter(name=ci_name,service__name=service_name)[0]
        except Exception, e:
            ci_ = ITConfigurationItem(name=ci_name,service=service_)
            ci_.save()
        modelobj.ci = ci_
    except Exception, e:
        pass

    try:
        index_unencrypted_password = headers.index("unencrypted_password")
        old_value = modelobj.password
        modelobj.password = passEncr('encrypt',
                 row[index_unencrypted_password])
        try:
            pass
            # modelobj.save()
        except Exception:
            modelobj.password=old_value
    except Exception:
        pass

    try:
        index_uploader = headers.index("uploader")
        old_value = modelobj.uploader
        modelobj.uploader = \
                User.objects.get(username=row[index_uploader])
        try:
            pass
            # modelobj.save()
        except Exception:
            modelobj.uploader=old_value
    except Exception, e:
        modelobj.uploader_id = 1
        # User.objects.filter(username=row[index_uploader])

    return modelobj



###############################################################################

### Parameters
filename="./credentials.csv"

################################################################################

parser = OptionParser()

parser.add_option("-f", "--file", dest="filename", default=filename,
                help="CSV file", metavar="CSVFILE")

(options, args) = parser.parse_args()
if options.filename:
    filename = options.filename

f = file(filename)
from_csv_to_model(passDb,f,extra_passDb)
